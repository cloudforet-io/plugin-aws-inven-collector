widget:
  - name: Count by Region
    type: chart
    options:
      chart_type: COLUMN
      name_options:
        key: name
        reference:
          reference_key: region_code
          resource_type: inventory.Region
        type: text
    query:
      aggregate:
        - group:
            fields:
              - name: value
                operator: count
            keys:
              - key: region_code
                name: name
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

  - name: Count By Instance Type
    type: chart
    options:
      chart_type: TREEMAP
      name_options:
        key: name
        type: text
    query:
        aggregate:
          - group:
              keys:
                - name: name
                  key: instance_type
              fields:
                - name: value
                  operator: count
        filter:
          - key: provider
            operator: eq
            value: aws
          - key: cloud_service_group
            operator: eq
            value: EC2
          - key: cloud_service_type
            operator: eq
            value: Instance

  - name: Count by Account
    type: chart
    options:
      chart_type: DONUT
    query:
      aggregate:
        - group:
            fields:
              - name: value
                operator: count
            keys:
              - key: account
                name: name
      filter:
        - key: account
          value: true
          operator: exists
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

  - name: Total Running Count
    type: card
    options:
      value_options:
        key: value
        options:
          default: '0'
        type: text
    query:
      aggregate:
        - count:
            name: value
      filter:
        - key: data.compute.instance_state
          value: RUNNING
          operator: eq
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

  - name: Total vCPU Count
    type: card
    options:
      value_options:
        key: value
        options:
          default: '0'
        type: text
    query:
      aggregate:
        - group:
            fields:
              - name: value
                key: data.hardware.core
                operator: sum
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

  - name: Total Memory Size
    type: card
    options:
      value_options:
        key: value
        type: size
        options:
          default: '0'
          source_unit: 'GB'
    query:
      aggregate:
        - group:
            fields:
              - name: value
                operator: sum
                key: data.hardware.memory
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

  - name: Total Disk Size
    type: card
    options:
      value_options:
        key: value
        type: size
        options:
          default: '0'
          source_unit: 'GB'
    query:
      aggregate:
        - unwind:
            path: data.disks
        - group:
            fields:
              - name: value
                operator: sum
                key: data.disks.size
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: Instance

search:
  fields:
  - IP Address: ip_addresses
  - Instance ID: data.compute.instance_id
  - Instance State: data.compute.instance_state
  - Instance Type: data.compute.instance_type
  - Key Pair: data.compute.keypair
  - Image: data.compute.image
  - Availability Zone: data.compute.az
  - OS Type: data.os.os_type
  - OS Details: data.os.details
  - OS Architecture: data.os.os_arch
  - Termination Protection: data.aws.termination_protection
    data_type: "boolean"
  - Auto Recovery: data.aws.auto_recovery
  - Root Volume Type: data.aws.root_volume_type
  - MAC Address: data.nics.mac_address
  - Public IP Address: data.nics.public_ip_address
  - Public DNS: data.nics.tags.public_dns
  - VPC ID: data.vpc.vpc_id
  - VPC Name: data.vpc.vpc_name
  - Subnet ID: data.subnet.subnet_id
  - Subnet Name: data.subnet.subnet_name
  - ELB Name: data.load_balancer.name
  - ELB DNS: data.load_balancer.endpoint
  - Auto Scaling Group: data.auto_scaling_group.name
  - Core: data.hardware.core
  - Memory: data.hardware.memory
  - Provider: provider # -> This resource is a reference(link) type (IN_PROGRESS)
  - Account ID: account
  - Cloud Service Group: cloud_service_group
  - Cloud Service Type: cloud_service_type
  - Last Collected: updated_at
    type: datetime
    source_type: iso8601


table:
  sort:
    key: data.id
    desc: true
  fields:
    - Instance State: data.compute.instance_state
      type: enum
      enums:
        - RUNNING: green.500
          type: state
        - PENDING: yellow.500
          type: state
        - REBOOTING: yellow.500
          type: state
        - SHUTTING-DOWN: yellow.500
          type: state
        - STOPPING: yellow.500
          type: state
        - STARTING: yellow.500
          type: state
        - PROVISIONING: yellow.500
          type: state
        - STAGING: yellow.500
          type: state
        - DEALLOCATING: yellow.500
          type: state
        - REPAIRING: yellow.500
          type: state
        - TERMINATED: gray.400
          type: state
        - STOPPED: red.500
          type: state
        - DEALLOCATED: red.500
          type: state
        - SUSPENDED: red.500
          type: state
    - Instance Type: data.compute.instance_type
    - Core: data.hardware.core
    - Memory: data.hardware.memory
    - Instance ID: data.compute.instance_id
      is_optional: true
    - Root Volume Type: data.aws.root_volume_type
      is_optional: true
    - Key Pair: data.compute.keypair
      is_optional: true
    - Image: data.compute.image
      is_optional: true
    - Availability Zone: data.compute.az
    - Termination Protection: data.aws.termination_protection
      is_optional: true
    - Auto Recovery: data.aws.auto_recovery
      is_optional: true
    - OS Type: data.os.os_type
      is_optional: true
    - OS: data.os.os_distro
    - OS Architecture: data.os.os_arch
      is_optional: true
    - OS Details: data.os.details
      is_optional: true
    - Primary IP: data.primary_ip_address
    - Public DNS: data.nics.tags.public_dns
      is_optional: true
    - Public IP: data.nics.public_ip_address
      is_optional: true
    - All IP: ip_addresses
      is_optional: true
    - MAC Address: data.nics.mac_address
      is_optional: true
    - CIDR: data.nics.cidr
      is_optional: true
    - VPC ID: data.vpc.vpc_id
      is_optional: true
    - Subnet ID: data.subnet.subnet_id
      is_optional: true
    - Subnet Name: data.subnet.subnet_name
      is_optional: true
    - ELB Name: data.load_balancer.name
      is_optional: true
    - IAM Role ARN: data.aws.iam_instance_profile.Arn
      is_optional: true
    - EC2 Lifecycle: data.aws.lifecycle
      is_optional: true
    - Auto Scaling Group: data.auto_scaling_group.name
      is_optional: true
    - Account ID: account


tabs.0:
  name: Instance
  type: item
  fields:
    - Instance ID: data.compute.instance_id
    - Instance State: data.compute.instance_state
      type: enum
      enums:
        - RUNNING: green.500
          type: state
        - PENDING: yellow.500
          type: state
        - STOPPING: yellow.500
          type: state
        - SHUTTING-DOWN: gray.400
          type: state
        - STOPPED: red.500
          type: state
    - Instance Type: data.compute.instance_type
    - EC2 Lifecycle: data.aws.lifecycle
      type: enum
      enums:
        - spot: indigo.500
        - scheduled: coral.600
    - Key Pair: data.compute.keypair
    - IAM Role ARN: data.aws.iam_instance_profile.Arn
    - EBS-Optimized: data.aws.ebs_optimized
      type: enum
      enums:
        - "true": indigo.500
        - "false": coral.600
    - Root Volume Type: data.aws.root_volume_type
    - Termination Protection: data.aws.termination_protection
      type: enum
      enums:
        - "true": indigo.500
        - "false": coral.600
    - Auto-Recovery Behavior: data.aws.auto_recovery
    - AMI ID: data.compute.image
    - Region: region_code
    - Availability Zone: data.compute.az
    - Termination Protection: data.aws.termination_protection
    - Public DNS: data.nics.tags.public_dns
    - Public IP: data.nics.public_ip_address
    - Security Groups: data.compute.security_groups.display # 상용에서도 똑같이 정상작동하지 않는 부분으로, 추후 수정이 필요함
      reference_key: data.group_id
    - Account ID: data.compute.account
    - Launched At: data.compute.launched_at
      type: datetime
      source_type: iso8601


tabs.1:
  name: Operating System
  type: item
  fields:
    - OS Type: data.os.os_type
    - OS Details: data.os.details
    - OS Distribution: data.os.os_distro
    - OS Architecture: data.os.os_arch


tabs.2:
  name: Hardware
  type: item
  fields:
    - Core: data.hardware.core
    - Memory: data.hardware.memory


tabs.3:
  name: VPC
  type: item
  fields:
    - VPC ID: data.vpc.vpc_id
      reference_key: data.vpc_id # VPC Refactoring 후 data.VpcId 으로 바꾸기
    - VPC Name: data.vpc.vpc_name
    - Subnet ID: data.subnet.subnet_id
      reference_key: data.subnet_id # VPC Refactoring 후 data.SubnetId 으로 바꾸기
    - Subnet Name: data.subnet.subnet_name


tabs.4:
  name: Auto Scaling Group
  type: item
  fields:
    - Auto Scaling Group Name: data.auto_scaling_group.name
      reference_key: data.AutoScalingGroupName
    - Launch Configuration: data.auto_scaling_group.launch_configuration.name
      reference_key: data.LaunchConfigurationName
    - Launch Template: data.auto_scaling_group.launch_template.LaunchTemplateName
      reference_key: data.LaunchTemplateName


tabs.5:
  name: Disk
  type: table
  root_path: data.disks
  fields:
    - Index: device_index
    - Name: device
    - Size(GB): size
      display_unit: GB
      source_unit: GB
      type: size
    - Volume ID: tags.volume_id
    - Volume Type: tags.volume_type
      type: enum
      enums:
        - gp2: blue.400
        - gp3: indigo.500
        - io1: coral.600
        - sc1: peacock.500
        - st1: green.500
        - standard: yellow.500
    - IOPS: tags.iops
    - Encrypted: tags.encrypted
      type: enum
      enums:
        - "true": indigo.500
        - "false": coral.600


tabs.6:
  name: NIC
  type: table
  root_path: data.nics
  fields:
    - Index: device_index
    - MAC Address: mac_address
    - IP Addresses: ip_addresses
    - CIDR: cidr
    - Public IP: public_ip_address
    - Public DNS: tags.public_dns


tabs.7:
  name: Security Groups
  type: table
  root_path: data.security_group
  fields:
    - Direction: direction
      type: enum
      enums:
        - inbound: indigo.500
        - outbound: coral.600
    - SG ID: security_group_id # --> This resource is a reference(link) type (IN_PROGRESS)
      reference_key: reference.resource_id
    - Name: security_group_name
    - Protocol: protocol
      type: enum
      enums:
        - ALL: coral.600
        - TCP: indigo.500
        - UDP: peacock.500
        - ICMP: green.500
    - Port Range: port
    - Remote: remote
    - Description: description


tabs.8:
  name: ELB
  type: table
  root_path: data.load_balancer
  fields:
    - Name: name
      reference_key: data.load_balancer_name # ELB Refactoring 후 data.LoadBalancerName 으로 바꾸기
    - Endpoint: endpoint
      reference_key: data.dns_name # ELB Refactoring 후 data.DNSName 으로 바꾸기
    - Type: type
      type: enum
      enums:
        - network: indigo.500
        - application: coral.600
    - Protocol: protocol
    - Port: port
    - Scheme: scheme
      type: enum
      enums:
        - "internet-facing": indigo.500
        - "internal": coral.600




widget:
  - name: Count by Region
    type: chart
    options:
      chart_type: COLUMN
      name_options:
        key: name
        reference:
          reference_key: region_code
          resource_type: inventory.Region
        type: text
    query:
      aggregate:
        - group:
            fields:
              - name: value
                operator: count
            keys:
              - key: region_code
                name: name
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Count by Account
    type: chart
    options:
      chart_type: DONUT
    query:
      aggregate:
        - group:
            fields:
              - name: value
                operator: count
            keys:
              - key: account
                name: name
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Related Instance by Region
    type: chart
    options:
      chart_type: COLUMN
      name_options:
        key: name
        reference:
          reference_key: region_code
          resource_type: inventory.Region
        type: text
    query:
      aggregate:
        - unwind:
            path: data.instances
        - group:
            fields:
              - name: value
                key: data.instances
                operator: count
            keys:
              - key: region_code
                name: name
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Related Instance by Account
    type: chart
    options:
      chart_type: DONUT
    query:
      aggregate:
        - unwind:
            path: data.instances
        - group:
            keys:
              - name: name
                key: account
            fields:
              - name: value
                operator: count
                key: data.instances
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Total Count
    type: card
    options:
      value_options:
        key: value
        options:
          default: '0'
        type: text
    query:
      aggregate:
        - count:
            name: value
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Releated ELB Total Count
    type: card
    options:
      value_options:
        key: value
        options:
          default: '0'
        type: text
    query:
      aggregate:
        - unwind:
            path: data.load_balancers
        - group:
            fields:
              - name: value
                operator: count
                key: data.load_balancers
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

  - name: Related Instance Total Count
    type: card
    options:
      value_options:
        key: value
        options:
          default: '0'
        type: text
    query:
      aggregate:
        - unwind:
            path: data.instances
        - group:
            fields:
              - name: value
                key: data.instances
                operator: count
      filter:
        - key: provider
          operator: eq
          value: aws
        - key: cloud_service_group
          operator: eq
          value: EC2
        - key: cloud_service_type
          operator: eq
          value: AutoScalingGroup

search:
  fields:
    - ARN: data.AutoScalingGroupARN
    - Launch Template Name: data.launch_template.LaunchTemplateName
    - Launch Template ID: data.launch_template.LaunchTemplateId
    - Availability Zone: data.AvailabilityZones
    - Instance ID: data.instances.InstanceId
    - AWS Account ID: account

table:
  sort:
    key: data.id
    desc: true
  fields:
    - Desired: data.DesiredCapacity
    - Min: data.MinSize
    - Max: data.MaxSize
    - Launch Template: data.display_launch_configuration_template
    - AZ: data.AvailabilityZones
    - ARN: data.AutoScalingGroupARN
    - Health Check Type: data.HealthCheckType
      is_optional: true
    - Instance Protected from Scale In: data.NewInstancesProtectedFromScaleIn
      is_optional: true
    - Default CoolDown (sec): data.DefaultCooldown
      is_optional: true
    - Health Check Grace Period (sec): data.HealthCheckGracePeriod
      is_optional: true
    - Launch Template Version: data.launch_template.version
      is_optional: true
    - Instances ID: data.instances.InstanceId
      is_optional: true
    - Instances Lifecycle: data.instances.lifecycle
      type: enum
      enums:
        - spot: indigo.500
        - scheduled: coral.600
      is_optional: true
    - Instances status: data.instances.HealthStatus
      is_optional: true
    - Instances type: data.instances.InstanceType
      is_optional: true
    - Availability Zone: data.instances.AvailabilityZone
      is_optional: true
    - LoadBalancers ARNs: data.load_balancer_arns
      is_optional: true
    - LoadBalancers name: data.load_balancers.name
      is_optional: true
    - LoadBalancers endpoint: data.load_balancers.LoadBalancerName
      is_optional: true
    - Target Group ARNs: data.TargetGroupARNs
      is_optional: true
    - Policy ARNs: data.policies.PolicyARN
      is_optional: true
    - Policy Names: data.policies.PolicyName
      is_optional: true
    - AWS Account ID: account

tabs.0:
  name: Auto Scaling
  type: item
  fields:
    - Name: data.AutoScalingGroupName
    - Launch Template name: data.launch_template.LaunchTemplateName
    - ARN: data.AutoScalingGroupARN
    - Desired Capacity: data.DesiredCapacity
    - Min Size: data.MinSize
    - Max Size: data.MaxSize
    - Default CoolDown: data.DefaultCooldown
    - Availability Zones: data.AvailabilityZones
      type: badge
      outline_color: violet.500
    - Health Check Type: data.HealthCheckType
      type: enum
      enums:
        - EC2: blue.400
        - ELB: indigo.500
    - Health Check Grace Period: data.HealthCheckGracePeriod
    - Service Linked Role ARN: data.ServiceLinkedRoleARN
    - Target Group ARNs: data.TargetGroupARNs
    - Load Balancer ARNs: data.load_balancer_arns
    - Termination Policies: data.TerminationPolicies
      type: badge
      background_color: gray.200
      text_color: gray.900
    - Creation Time: data.CreatedTime
      type: datetime
      source_type: iso8601


tabs.2:
  name: Launch Template
  type: item
  fields:
    - ID: data.launch_template.LaunchTemplateId
    - Name: data.launch_template.LaunchTemplateName
    - Version: data.launch_template.version

tabs.3:
  name: Instances
  type: table
  root_path: data.instances
  fields:
    - Instance ID: InstanceId
    - Life Cycle: lifecycle
    - Lifecycle Status: LifecycleState
      type: enum
      enums:
        - InService: green.500
          type: state
        - Standby: blue.400
          type: state
        - Pending: yellow.500
          type: state
        - Pending:Wait: yellow.500
          type: state
        - Pending:Proceed: yellow.500
          type: state
        - Quarantined: yellow.500
          type: state
        - Detaching: yellow.500
          type: state
        - EnteringStandby: yellow.500
          type: state
        - Terminating: yellow.500
          type: state
        - Terminating:Wait: yellow.500
          type: state
        - Terminating:Proceed: yellow.500
          type: state
        - Detached: gray.400
          type: state
        - Terminated: red.500
          type: state
    - Instance Type: InstanceType
    - AZ: AvailabilityZone
    - Health Status: HealthStatus
      type: enum
      enums:
        - Healthy: green.500
          type: state
        - Unhealthy: red.500
          type: state
    - Protected from Scale In: ProtectedFromScaleIn
      type: enum
      enums:
        - "true": indigo.500
        - "false": coral.600
    - Weighted Capacity: WeightedCapacity

tabs.4: # ELB Tab metadata refactoring needs to be developed.(IN_PROGRESS)
  name: ELB
  type: table
  root_path: data.load_balancers
  fields:
    - Name: name
      reference_key: data.load_balancer_name # ELB Refactoring 후 data.LoadBalancerName 으로 바꾸기
    - Endpoint: LoadBalancerName
      reference_key: data.dns_name # ELB Refactoring 후 data.DNSName 으로 바꾸기
    - Type: Type
      type: enum
      enums:
        - network: indigo.500
        - application: coral.600
    - Protocol: protocol
    - Port: port
    - Scheme: Scheme
      type: enum
      enums:
        - internet-facing: indigo.500
        - internal: coral.600

tabs.5:
  name: Policies
  type: table
  root_path: data.policies
  fields:
    - Policy Name: PolicyName
    - Policy Type: PolicyType
    - Enabled: Enabled
      type: enum
      enums:
        - "true": indigo.500
        - "false": coral.600
    - Metric Type (Predefined): TargetTrackingConfiguration.PredefinedMetricSpecification.PredefinedMetricType)
    - Target Value: TargetTrackingConfiguration.TargetValue
    - Disable Scale In: TargetTrackingConfiguration.DisableScaleIn
      type: enum
      enums:
          - "true": indigo.500
          - "false": coral.600

tabs.6:
  name: Notifications
  type: table
  root_path: data.notification_configurations
  fields:
    - Topic ARN: TopicARN
    - Notification Type: NotificationType

tabs.7:
  name: Scheduled Actions
  type: table
  root_path: data.scheduled_actions
  fields:
  - Name: ScheduledActionName
  - Recurrence: Recurrence
  - Desired Capacity: DesiredCapacity
  - Min: MinSize
  - Max: MaxSize
  - Start Time: StartTime
    type: datetime
    source_type: iso8601
  - End Time: EndTime
    type: datetime
    source_type: iso8601

tabs.8:
  name: Lifecycle Hooks
  type: table
  root_path: data.lifecycle_hooks
  fields:
    - Name: LifecycleHookName
    - Lifecycle Transaction: LifecycleTransition
    - Default Result: DefaultResult
    - Heartbeat Timeout (Seconds): HeartbeatTimeout
    - Notification Target ARN: NotificationTargetARN
    - Role ARN: RoleARN